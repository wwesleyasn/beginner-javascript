const video = document.querySelector(`.webcam`);
const canvas = document.querySelector(`.video`);
const ctx = canvas.getContext(`2d`);
const faceCanvas = document.querySelector(`.face`);
const faceCtx = canvas.getContext(`2d`);
const faceDetector = new window.FaceDetector(); // Write a function to populate the users video

async function populateVideo() {
  const stream = await navigator.mediaDevices.getUserMedia({
    video: {
      width: 1280,
      height: 720
    }
  });
  video.srcObject = stream;
  await video.play(); // Size the canvas to be the same size as the video

  console.log(video.videoWidth, video.videoHeight);
  canvas.width = video.videoWidth;
  canvas.height = video.videoHeight;
  faceCanvas.width = video.videoWidth;
  faceCanvas.height = video.videoHeight;
}

async function detect() {
  const faces = await faceDetector.detect(video); // Ask the browser when the next animation phase is and tell it to rundetect for us

  faces.forEach(drawFace);
  requestAnimationFrame(detect);
}

function drawFace(face) {
  const {
    width,
    height,
    top,
    left
  } = face.boundingBox;
  ctx.strokeStyle = `#ffc600`;
  ctx.lineWidth = 2;
  ctx.strokeRect(left, top, width, height);
}

populateVideo().then(detect);